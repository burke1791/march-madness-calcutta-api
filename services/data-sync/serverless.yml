
service: calcutta-data-sync-service
projectDir: ../../

package:
  individually: true

plugins:
  - serverless-bundle

custom:
  stage: ${opt:stage, self:provider.stage}
  provider: ${file(../../common/config/provider.json)}
  AUCTION_TABLE: Auctions
  BID_HISTORY_TABLE: BidHistory
  CONNECTION_TABLE: AuctionConnections
  CHAT_TABLE: AuctionChat
  AUCTION_SETTINGS_TABLE: AuctionSettings
  AUCTION_RESULTS_TABLE: AuctionResults
  LEAGUE_MEMBERSHIP_TABLE: LeagueMembership

provider:
  name: aws
  runtime: ${self:custom.provider.runtime}
  timeout: ${self:custom.provider.timeout}
  logRetentionInDays: ${self:custom.provider.logRetentionInDays}
  region: ${self:custom.provider.region}
  stage: ${self:custom.stage}
  environment:
    APP_ENV: ${self:custom.stage} # used by the websocket verification function
    USER_POOL_ID: ${self:custom.provider.env.USER_POOL_ID}
    USER_POOL_CLIENT_ID: ${self:custom.provider.env.USER_POOL_CLIENT_ID}
    AUCTION_TABLE: ${self:custom.AUCTION_TABLE}
    BID_HISTORY_TABLE: ${self:custom.BID_HISTORY_TABLE}
    CONNECTION_TABLE: ${self:custom.CONNECTION_TABLE}
    CHAT_TABLE: ${self:custom.CHAT_TABLE}
    AUCTION_SETTINGS_TABLE: ${self:custom.AUCTION_SETTINGS_TABLE}
    AUCTION_RESULTS_TABLE: ${self:custom.AUCTION_RESULTS_TABLE}
    LEAGUE_MEMBERSHIP_TABLE: ${self:custom.LEAGUE_MEMBERSHIP_TABLE}
    DB_NAME: ${self:custom.provider.env.DB_NAME}
    DB_USER: ${self:custom.provider.env.DB_USER}
    DB_PASSWORD: ${self:custom.provider.env.DB_PASSWORD}
    DB_HOST:
      Fn::ImportValue: ${self:custom.provider.env.DB_HOST}
    DB_PORT: ${self:custom.provider.env.DB_PORT}
      # Fn::ImportValue: ${self:custom.provider.env.DB_PORT}
    WEBSOCKET_ENDPOINT:
      Fn::Join:
        - ''
        - - Ref: WebsocketsApi
          - .execute-api.
          - Ref: AWS::Region
          - .amazonaws.com/
          - ${self:custom.stage}

functions:
  # HTTP functions
  joinLeague:
    handler: functions/joinLeague.joinLeague
    role:
      Fn::GetAtt: [DataSyncRole, Arn]
    events:
      - http:
          path: joinLeague
          method: post
          integration: lambda
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          cors:
            origin: '*'
            headers:
              - Content-Type
              - x-cognito-token

resources:
  - ${file(../../common/resources/api-gateway-authorizer.yml)}
  - ${file(resources/roles.yml)}