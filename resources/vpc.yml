Resources:
  CalcuttaVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        !If [IsProduction, !Ref: ProdVPCCidr, !Ref: StageVPCCidr]
      EnableDnsHostnames: True
      EnableDnsSupport: True
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: calcutta-${self:custom.stage}

  CalcuttaPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      PeerOwnerId: ${env:AWS_COGNITO_ACCOUNT_ID}
      PeerRoleArn: arn:aws:iam::${env:AWS_COGNITO_ACCOUNT_ID}:role/calcutta-${self:custom.stage}-peer-role
      PeerVpcId: ${env:AWS_COGNITO_VPC_ID}
      VpcId:
        Ref: CalcuttaVPC
      Tags:
        - Key: Name
          Value: 'Cognito Peer'

# Will need to have different CIDR ranges between dev and prod VPCs before attempting to peer
  CalcuttaLinkedServerPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Condition: IsProduction
    Properties:
      PeerOwnerId: ${env:AWS_LINKED_SERVER_ACCOUNT_ID}
      PeerRoleArn: arn:aws:iam::${env:AWS_LINKED_SERVER_ACCOUNT_ID}:role/calcutta-${self:custom.stage}-linked-server-peer-role
      PeerVpcId: ${env:AWS_LINKED_SERVER_VPC_ID}
      VpcId:
        Ref: CalcuttaVPC
      Tags:
        - Key: Name
          Value: 'Linked Server Peer'

  ProdVPCCidr:
    Type: AWS::EC2::VPCCidrBlock
    Condition: IsProduction
    Properties:
      CidrBlock: 10.0.0.0/16
      VpcId:
        Ref: CalcuttaVPC
  
  StageVPCCidr:
    Type: AWS::EC2::VPCCidrBlock
    Condition: IsDev
    Properties:
      CidrBlock: 10.2.0.0/16
      VpcId:
        Ref: CalcuttaVPC

Outputs:
  CalcuttaVPCId:
    Description: 'Calcutta VPC locical Id'
    Value:
      Ref: CalcuttaVPC
    Export:
      Name: calcutta-vpc-${self:custom.stage}